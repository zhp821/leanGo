# Generated by nixy {{datetime}}

user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    use epoll;
    worker_connections 2048;
    multi_accept on;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    charset    utf-8;
    add_header X-Proxy {{ .Xproxy }} always;
    error_log /var/log/nginx/error.log warn;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format accesslog  '$time_local`'
                          '$remote_addr`'
                          '$http_x_forwarded_for`'
                          '$request_method`'
                          '$request_uri`'
                          '$status`'
                          '$body_bytes_sent`'
                          '$http_referer`'
                          '$request_time`'
                          '$upstream_response_time`'
                          '$host`'
                          '$upstream_addr`'
                          '$http_user_agent`';

    access_log  /var/log/nginx/access.log  accesslog;
    server_tokens off;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_redirect off;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    # time out settings
    proxy_send_timeout 120;
    proxy_read_timeout 120;
    send_timeout 120;
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  1800;
    client_max_body_size  200m;
    gzip  on;
    gzip_types  text/xml text/plain text/css application/javascript application/x-javascript application/rss+xml;

    server {
        listen       80 default_server;
        server_name  _;
		        # Everything is a 503                                                                                    
        location / {                                                                                             
            return 503;                                                                                          
        }                                                                                                        
    } 
	                                                                                                           
    {{- range $NUM, $app := .Apps}}                                                                                                                                                                                                              
    upstream {{$app.NUM}}{{index $app.Hosts 0}}{                                                                 
        {{- range $app.Tasks}}                                                                           
        server {{ .Host }}:{{ index .Ports 0 }};                                                                 
        {{- end}}                                                                                                
    } 
	{{- end}}
	
	{{ range $key, $value := .Servers}}
    server {                                                                                                     
        listen 80;               
        server_name {{$key}} {{$key}}.*; 
		{{range $k ,$v := $value}}
		  {{$path := index $v.Labels "NGINX_PATH"}}   
		 location  {{if eq $path ""}}/{{else}}{{$path}}{{end}} {                                                  
            proxy_set_header HOST $host;                       
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_connect_timeout 30;                                                            
            proxy_http_version 1.1;                                                              
            proxy_set_header Upgrade $http_upgrade;                                              
            proxy_set_header Connection $connection_upgrade;                                     
            proxy_pass http://{{$v.NUM}}{{index $v.Hosts 0}};                                
        }                                                                                
        {{end}}
    }                                                                                            
    {{- end}}                                                                                    
   include /etc/nginx/conf.d/*.conf;                                                             
}